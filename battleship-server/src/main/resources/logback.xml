<configuration>
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <!-- ===================================================== -->
    <!-- Common Config -->
    <!-- ===================================================== -->

    <!-- JUL/JDK14 to Logback bridge -->
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <!-- Service Log (Rollover every 50MB, max 11 logs) -->
    <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.service.output:-service.log}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.service.output:-service.log}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%date %.-3level %-16X{traceId} %-25logger{0} %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Access Log (Rollover every 50MB, max 11 logs) -->
    <appender name="ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.access.output:-access.log}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.access.output:-access.log}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%msg %X{traceId}%n</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Primary Async Appenders -->
    <!-- ===================================================== -->

    <property name="async_queue_size" value="${queue.size:-1024}"/>
    <property name="async_max_flush_time" value="${max.flush.time:-0}"/>

    <appender name="ASYNC-ACCESS" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>${async_queue_size}</queueSize>
        <maxFlushTime>${async_max_flush_time}</maxFlushTime>
        <appender-ref ref="ACCESS"/>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level[%20.36logger] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Package Config -->
    <!-- ===================================================== -->

    <!-- Per-Package Config -->
    <logger name="com.yaochin.battleship.BattleshipMain" level="warn">
        <appender-ref ref="STDOUT"/>
    </logger>

    <logger name="com.yaochin.battleship" level="info" additivity="false">
        <appender-ref ref="STDOUT"/>
    </logger>

    <!-- Root Config -->
    <root level="${log_level:-WARN}">
        <appender-ref ref="STDOUT" />
    </root>

    <!-- Access Logging -->
    <logger name="com.twitter.finatra.http.filters.AccessLoggingFilter"
            level="info"
            additivity="false">
        <appender-ref ref="ASYNC-ACCESS"/>
    </logger>

</configuration>